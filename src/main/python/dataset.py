# Generated by https://quicktype.io
#
# To change quicktype's target language, run command:
#
#   "Set quicktype target language"

from typing import Dict, List, Any
from enum import Enum
import constants


class Babel:
    seq_id: int

    def __init__(self, seq_id: int) -> None:
        self.seq_id = seq_id


class IDMap:
    string2_int: Dict[str, int]
    int2_string: Dict[str, str]

    def __init__(self, string2_int: Dict[str, int], int2_string: Dict[str, str]) -> None:
        self.string2_int = string2_int
        self.int2_string = int2_string


class Interest:
    platform: int
    wiki_page_id: int
    seq_id: int

    def __init__(self, platform: int, wiki_page_id: int, seq_id: int) -> None:
        self.platform = platform
        self.wiki_page_id = wiki_page_id
        self.seq_id = seq_id


class Tweet:
    author_id: int
    interest_id: int
    seq_id: int

    def __init__(self, author_id: int, interest_id: int, seq_id: int) -> None:
        self.author_id = author_id
        self.interest_id = interest_id
        self.seq_id = seq_id


class User:
    follow_out_ids: List[int]
    follow_in_ids: List[int]
    tweets_ids: List[int]
    wiki_page_about_user_id: int
    dataset_name: str
    wiki_pages_of_liked_items_ids: List[Any]
    famous: bool
    seq_id: int

    def __init__(self, follow_out_ids: List[int], follow_in_ids: List[int], tweets_ids: List[int], wiki_page_about_user_id: int, dataset_name: Name, wiki_pages_of_liked_items_ids: List[Any], famous: bool, seq_id: int) -> None:
        self.follow_out_ids = follow_out_ids
        self.follow_in_ids = follow_in_ids
        self.tweets_ids = tweets_ids
        self.wiki_page_about_user_id = wiki_page_about_user_id
        self.dataset_name = dataset_name
        self.wiki_pages_of_liked_items_ids = wiki_pages_of_liked_items_ids
        self.famous = famous
        self.seq_id = seq_id


class WikiPage:
    babel_categories: List[int]
    babel_domains: List[int]
    simple_name: str
    seq_id: int

    def __init__(self, babel_categories: List[int], babel_domains: List[int], simple_name: str, seq_id: int) -> None:
        self.babel_categories = babel_categories
        self.babel_domains = babel_domains
        self.simple_name = simple_name
        self.seq_id = seq_id


class Dataset:
    name: constants.Dataset
    dimension: constants.Dimension
    interests: Dict[str, Interest]
    tweets: Dict[str, Tweet]
    users: Dict[str, User]
    wiki_pages: Dict[str, WikiPage]
    babel_categories: Dict[str, Babel]
    babel_domains: Dict[str, Babel]
    id_map: IDMap

    def __init__(self, name: constants.Dataset, dimension: str, interests: Dict[str, Interest], tweets: Dict[str, Tweet], users: Dict[str, User], wiki_pages: Dict[str, WikiPage], babel_categories: Dict[str, Babel], babel_domains: Dict[str, Babel], id_map: IDMap) -> None:
        self.name = name
        self.dimension = dimension
        self.interests = interests
        self.tweets = tweets
        self.users = users
        self.wiki_pages = wiki_pages
        self.babel_categories = babel_categories
        self.babel_domains = babel_domains
        self.id_map = id_map
